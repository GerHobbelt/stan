#include <stan/services/pathfinder/single.hpp>
#include <stan/io/array_var_context.hpp>
#include <stan/io/empty_var_context.hpp>
#include <test/test-models/good/eight_schools.hpp>
#include <test/unit/services/instrumented_callbacks.hpp>
#include <stan/callbacks/stream_writer.hpp>
#include <test/unit/services/pathfinder/util.hpp>
#include <gtest/gtest.h>

auto&& blah = stan::math::init_threadpool_tbb(1);

stan::io::array_var_context init_context() {
  std::vector<std::string> names_r{"y", "sigma"};
  std::vector<double> values_r{28, 8,  -3, 7,  -1, 1,  18, 12,
                               15, 10, 16, 11, 9,  11, 10, 18};
  using size_vec = std::vector<size_t>;
  std::vector<size_vec> dims_r{size_vec{8}, size_vec{8}};
  std::vector<std::string> names_i{"J"};
  std::vector<int> values_i{8};
  using size_vec = std::vector<size_t>;
  std::vector<size_vec> dims_i{size_vec{}};
  return stan::io::array_var_context(names_r, values_r, dims_r, names_i,
                                     values_i, dims_i);
}

class ServicesPathfinderSingle : public testing::Test {
 public:
  ServicesPathfinderSingle()
      : init(init_ss),
        parameter(parameter_ss),
        diagnostics(diagnostic_ss),
        context(init_context()),
        model(context, 0, &model_ss) {}

  std::stringstream init_ss, parameter_ss, diagnostic_ss, model_ss;
  stan::callbacks::stream_writer init;
  loggy logger;
  values parameter;
  values diagnostics;
  stan::io::array_var_context context;
  stan_model model;
};

stan::io::array_var_context init_init_context() {
  std::vector<std::string> names_r{"mu", "tau", "theta_tilde"};
  std::vector<double> values_r{0.516456,
                               0.1732794,  //-1.75285,
                               -0.937965, -0.511504, 0.291413, 1.63283,
                               -1.19327,  1.59356,   1.7787,   0.643191};
  using size_vec = std::vector<size_t>;
  std::vector<size_vec> dims_r{size_vec{}, size_vec{}, size_vec{8}};
  std::vector<std::string> names_i{""};
  std::vector<int> values_i{8};
  using size_vec = std::vector<size_t>;
  std::vector<size_vec> dims_i{size_vec{}};
  return stan::io::array_var_context(names_r, values_r, dims_r);
}

TEST_F(ServicesPathfinderSingle, rosenbrock) {
  constexpr unsigned int seed = 0;
  constexpr unsigned int chain = 1;
  constexpr double init_radius = .7;
  constexpr double num_elbo_draws = 80;
  constexpr double num_draws = 100;
  constexpr int history_size = 15;
  constexpr double init_alpha = 0.001;
  constexpr double tol_obj = 0;
  constexpr double tol_rel_obj = 0;
  constexpr double tol_grad = 0;
  constexpr double tol_rel_grad = 0;
  constexpr double tol_param = 0;
  constexpr int num_iterations = 60;
  constexpr bool save_iterations = true;
  constexpr int refresh = 1;
  constexpr int num_eval_attempts = 100;
  constexpr int num_threads = 1;

  mock_callback callback;
  stan::io::array_var_context empty_context = init_init_context();

  Eigen::MatrixXd X_vals(21, 10);
  X_vals << -0.9379653474316, -0.511504401452839, 0.291413453407586,
      1.6328311599791, -1.19327227585018, 1.59355873987079, 1.77870107442141,
      0.643191169947386, 0.516456175595522, -1.75285491812974, -0.667708,
      -0.363698, 0.208631, 1.1753, -0.857873, 1.14468, 1.28596, 0.463694,
      0.631304, -1.45833, 0.150717, 0.0850697, -0.0371175, -0.151779, 0.117982,
      -0.168591, -0.116361, -0.0534748, 1.37109, 0.539936, 0.375857, 0.206779,
      -0.0804938, -0.18698, 0.143935, -0.271543, 0.00939887, -0.0479159,
      1.81544, 1.61375, 0.878688, 0.437858, -0.1595, 0.100877, -0.110194,
      -0.209658, 0.841208, 0.124438, 2.56307, 2.87656, 0.835656, 0.28938,
      -0.157124, 0.175336, -0.169541, -0.094994, 0.746999, 0.177726, 2.5215,
      2.76128, 0.862983, 0.222864, -0.166699, 0.224032, -0.20765, -0.0386151,
      0.730413, 0.222437, 2.58218, 2.90326, 0.867223, 0.140358, -0.187308,
      0.161857, -0.120468, -0.0464945, 0.479354, 0.275662, 2.64748, 3.18993,
      0.76018, 0.200837, -0.165319, 0.145555, -0.133769, -0.0514939, 0.54871,
      0.259796, 2.61469, 3.17284, 0.73976, 0.188719, -0.161185, 0.144243,
      -0.126722, -0.0540425, 0.532005, 0.259251, 2.61664, 3.23775, 0.715526,
      0.17578, -0.152404, 0.138478, -0.121947, -0.053399, 0.497343, 0.23986,
      2.59348, 3.28784, 0.718124, 0.174263, -0.151608, 0.141961, -0.116709,
      -0.048173, 0.502842, 0.236043, 2.57425, 3.29454, 0.721043, 0.177217,
      -0.150325, 0.143547, -0.11356, -0.0448803, 0.50873, 0.230468, 2.53103,
      3.29763, 0.728927, 0.183963, -0.145169, 0.152236, -0.105835, -0.0330273,
      0.523303, 0.219593, 2.33846, 3.30414, 0.738022, 0.197333, -0.136582,
      0.160657, -0.0892523, -0.0232173, 0.534787, 0.223114, 2.00287, 3.31777,
      0.742692, 0.204078, -0.123187, 0.169811, -0.092551, -0.00725547, 0.537874,
      0.254255, 1.54852, 3.34801, 0.726131, 0.208904, -0.113476, 0.17482,
      -0.0608786, -0.00913573, 0.520924, 0.266993, 1.30314, 3.36102, 0.726111,
      0.203815, -0.116663, 0.169299, -0.075497, -0.0127053, 0.513807, 0.262536,
      1.42165, 3.36352, 0.723005, 0.202541, -0.116838, 0.168001, -0.0766521,
      -0.0128625, 0.510969, 0.262904, 1.43252, 3.36655, 0.723162, 0.202521,
      -0.117191, 0.167857, -0.0765819, -0.0131429, 0.510897, 0.263148, 1.43293,
      3.36647, 0.723114, 0.202517, -0.117238, 0.167945, -0.0765771, -0.0130584,
      0.510919, 0.263161, 1.43295, 3.3664;
  X_vals.transposeInPlace();
  //std::cout << "X: \n" << X_vals << "\n";
  /*
  std::cout << "X: \n" << X_vals << "\n";
  */
  Eigen::MatrixXd G_vals(21, 10);
  G_vals << -0.959256330532746, -0.524625358486603, 0.293827813622171,
      1.62395155240062, -1.19047053791481, 1.59326171139352, 1.74893990789051,
      0.637109257575491, -0.407643819107661, -1.0453791562244, -0.696164,
      -0.381036, 0.211975, 1.16359, -0.853761, 1.14448, 1.24625, 0.455609,
      -0.396231, -1.04201, -0.0503883, -0.0261708, -0.00824623, -0.235295,
      0.172499, -0.16743, -0.405122, -0.110251, -0.32796, -0.774569, -0.166413,
      -0.0516421, 0.00603523, -0.44111, 0.363287, -0.294291, -0.800955,
      -0.209493, -0.274606, -0.174514, 0.102485, 0.852647, 0.0299219, -0.287352,
      0.241974, -0.526429, 0.751939, -0.271598, 0.0456244, 0.18645, -0.026246,
      0.146924, 0.0304792, -0.0475403, -0.00561046, -0.0925512, 0.167844,
      -0.1478, -0.0115247, -0.530177, 0.0783262, -0.0240568, 0.0144019,
      0.173865, -0.253575, 0.093704, 0.347543, -0.0793166, 0.0210828, -0.255826,
      0.404111, -0.331698, -0.0831051, 0.0772494, 0.0959209, 0.0575332,
      -0.421812, 0.0764533, 0.0360866, -0.100208, -0.00763214, 0.0599035,
      -0.00978904, -0.0340339, -0.00969479, 0.0245239, 0.00321709, 0.0252715,
      0.0412275, -0.12862, -0.00041446, 0.0421016, -0.0108922, -0.00494786,
      -0.00461425, -0.00354606, 0.065832, 0.0407688, 0.0498011, -0.0179956,
      -0.0274452, -0.0112481, 0.00572433, -0.0158935, -0.0137745, -0.0172758,
      -0.0611676, -0.0066508, 0.044491, -0.0293329, -0.00832126, -0.0217078,
      0.00493035, 0.00874475, 0.0255073, 0.0131718, -0.000497742, -0.0186966,
      0.0490626, 0.00226387, 0.00385592, -0.00549597, 0.00446075, 0.0124978,
      0.0398475, 0.0260008, 0.0465842, -0.0396117, 0.0500701, 0.02438,
      0.0251435, 0.00615212, 0.00225265, 0.035934, 0.0477928, 0.0658124,
      0.138207, -0.0898899, 0.0460609, 0.0609148, 0.0476127, 0.0452688,
      -0.00361461, 0.0322037, 0.0946054, 0.0593727, 0.193221, -0.103936,
      0.0351806, 0.0841389, 0.0694903, 0.0202448, -0.00714195, 0.0238126,
      -0.122116, 0.0731776, 0.21044, -0.0283565, 0.0111021, 0.117655,
      -0.0130051, 0.0139338, 0.00280393, 0.0179159, 0.134343, 0.000358796,
      0.0354597, -6.73221e-05, -0.000705955, -0.0126725, 0.00699117, 0.0044783,
      0.00196504, 0.0052278, 0.0102796, 0.000328956, 0.0128139, -0.00438954,
      0.000342617, 0.00330117, -0.000297419, 0.00022161, 0.00165241,
      0.000571008, -0.00106536, 0.00145726, 0.000811386, -0.00084998,
      6.6186e-05, 0.00028314, 0.000359043, 4.55642e-05, 0.000207156,
      -0.000543046, -7.04233e-05, -0.000666129, -1.12489e-05, 3.26843e-05,
      -1.65258e-05, 0.000152705, -1.34697e-05, -0.000103397, 2.50313e-05,
      8.99411e-05, 4.38511e-05, 1.53115e-05, -8.10758e-05, 5.07464e-05,
      -4.18918e-07, -6.97718e-05;
  G_vals.transposeInPlace();
  /*
  std::cout << "G: \n" << G_vals << "\n";
  Eigen::MatrixXd Ykt_diff = G_vals.middleCols(1, 20) - G_vals.leftCols(20);
  Eigen::MatrixXd Skt_diff = X_vals.middleCols(1, 20) - X_vals.leftCols(20);
  auto Dk = ((Ykt_diff.array()) * Skt_diff.array()).colwise().sum().eval();
  auto thetak = (Ykt_diff.array().square().colwise().sum()).abs().eval();
  if (STAN_DEBUG_PATH_CURVE_CHECK) {
    std::cout << "\n Check Dk: \n" << Dk.transpose() << "\n";
    std::cout << "\n Check thetak: \n" << thetak.transpose() << "\n";
  }
  */
  std::vector<std::tuple<Eigen::VectorXd, Eigen::VectorXd>> input_iters;
  for (Eigen::Index i = 0; i < X_vals.cols(); ++i) {
    input_iters.emplace_back(X_vals.col(i), G_vals.col(i));
  }

  int return_code
      = stan::services::pathfinder::pathfinder_lbfgs_single(  // X_vals, G_vals,
          model, empty_context, seed, chain, init_radius, history_size,
          init_alpha, tol_obj, tol_rel_obj, tol_grad, tol_rel_grad, tol_param,
          num_iterations, save_iterations, refresh, callback, num_elbo_draws,
          num_draws, num_eval_attempts, num_threads, logger, init, parameter, diagnostics);

  for (auto&& times : parameter.times_) {
    std::cout << times;
  }

  // Eigen::MatrixXd param_vals = parameter.values_.transpose();
  // Eigen::MatrixXd param_vals = parameter.values_.transpose();
  Eigen::MatrixXd param_vals = std::move(parameter.values_);
  /*
  std::cout << "\n --- Optim Path ---" << std::endl;
  for (Eigen::Index i = 0; i < diagnostics.optim_path_.size(); ++i) {
    Eigen::MatrixXd tmp(2, std::get<0>(diagnostics.optim_path_[i]).size());
    tmp.row(0) = std::get<0>(diagnostics.optim_path_[i]).transpose();
    tmp.row(1) = std::get<1>(diagnostics.optim_path_[i]).transpose();
    std::cout << "Iter: " << i << "\n" << tmp << "\n";
  }
  */
  Eigen::IOFormat CommaInitFmt(Eigen::StreamPrecision, 0, ", ", ", ", "\n", "",
                               "", "");

  //std::cout << "---- Results  -------" << std::endl;
  /*
  std::cout << "Values: \n"
            << param_vals.format(CommaInitFmt) << "\n";
  */
  Eigen::VectorXd mean_vals = param_vals.rowwise().mean().eval();
  //       std::cout << "Mean Values: \n" <<
  //       mean_vals.transpose().eval().format(CommaInitFmt) << "\n";
  Eigen::VectorXd sd_vals = (((param_vals.colwise() - mean_vals)
                                  .array()
                                  .square()
                                  .matrix()
                                  .rowwise()
                                  .sum()
                                  .array()
                              / (param_vals.cols() - 1))
                                 .sqrt())
                                .transpose()
                                .eval();

  Eigen::VectorXd r_answer_vec(10 * 100);
  r_answer_vec << -0.480685045806342, 0.264657333844428, -0.87050253936714,
      1.42596346969073, 0.443619146321916, -0.974978025140829,
      0.361502911648785, 0.681564799788363, 1.87316921975915,
      0.0890479151877764, 1.66784640030806, 0.479372088959062,
      -0.657194387122538, -2.34599552631952, 1.23282178602114,
      -0.222741207557055, -0.141225704483779, 0.894571347685905,
      2.41598320562301, 1.86329289834444, 1.07685860726025, 0.871072276564516,
      0.0374543053586734, -2.12395432344545, 0.731787243096492,
      -0.234156038348887, -0.278711974515752, -1.51234913916009,
      1.10705411729555, 1.67181882197232, 1.50569365545024, -0.0175631902092582,
      0.350686963104951, -0.206162574563027, -1.25104267612603,
      -0.579905953804618, -0.507034066363174, -0.109600907710341,
      2.53090680056458, 1.57420806791459, -0.0192143245189976,
      -0.17114476510022, 0.65978017649587, 0.400594068097216,
      -0.567664564239315, -0.863740946634223, 0.240970421840771,
      0.712531598891873, 1.20336280090677, 1.39094909268465, 0.548625793155492,
      -0.525507386241689, 0.304039619415891, -1.26882199271062,
      1.53904319775136, 1.78766753955081, -0.481526904275361, -1.09137990053433,
      2.00306124499911, 0.650292039081524, 2.54992482733305, 0.0481776293005072,
      0.65218243400968, -0.128033276861408, -0.622437267124869,
      0.0136000245073658, -1.8934623677001, 1.41277290580056, 1.66205557773828,
      3.28092037954096, 0.622871206075383, -0.624852936702337,
      0.573320853499647, -1.074209571022, -1.12762223557757, 0.120066163015778,
      -0.554909726708834, -0.0512388994567235, 1.44891025153395,
      0.0170786611526343, -0.418276394314608, -0.0510269787171272,
      1.13990301280083, -1.65569745203382, 0.705909094399899, 0.16134042505005,
      0.924221716314448, -0.355036569228519, 1.75431652089165,
      0.935348861365577, -0.388859621777651, 1.29154710207532, 1.12192489726007,
      0.536277257325521, 1.69224886427522, 0.380873425107417, -1.37495454785214,
      -0.622314432729262, 0.200342089430146, 0.299783529582894,
      -0.480126349556509, 0.12037891904654, -0.945182548794795,
      0.0121198923491542, -0.534310007014266, 1.58955016884842,
      0.590614145740349, 0.851187988398187, 1.59738038984837, 1.9318524155075,
      -0.483698785781882, -0.376147306437035, 1.39358646902146,
      -0.795359593024569, -0.0893180317193737, -0.557775450567792,
      -0.434418022254071, -0.329555917463719, 1.90192406372771,
      0.535074639123403, -0.357279734867408, 1.42384177634192,
      -0.25063609621847, -0.328406761719355, 0.017358976631599,
      0.537917331619613, -0.191203597317852, -0.0905523715414699,
      0.662848445702064, 0.220843732152141, 0.218784730740073,
      -0.498539315092672, 0.493710612664504, -1.65810485015338,
      0.421083012724649, -1.69657940629592, -0.420587235864792,
      -0.574027482711467, 0.898431234287898, 1.08042524730608,
      -1.76838019013617, 1.25404572371693, -1.69860354829011,
      -0.604505710724831, -0.990173020053883, -0.903602118641434,
      1.93256666002767, -0.0395863701467866, -0.0743062226776963,
      -1.51930565483581, 0.599037370283978, 0.0661205733301442,
      -0.353904550531436, -1.06975839970584, -1.36073498510499,
      -1.2320027438659, 0.862116776057241, -0.669966024898478,
      0.0216008677551769, 2.69719184978421, 0.564557525051461,
      -0.158720799475554, 1.02088168640598, 0.728791934563778,
      -0.498315491100515, 2.02093350924027, -0.365346178135276,
      -1.47560275865866, 1.09198291094004, 0.463917824171489, 2.44921625809493,
      0.188997517182353, 0.420118438713606, -0.226791551689285,
      -0.215904363885426, -0.20091239252185, 0.655070141755858,
      2.01671088926715, 2.40678152929406, 1.89497200536938, -1.07902656172774,
      1.06615893451854, 0.183057934089501, -1.60074851666053, 0.634305198978641,
      -0.325376305413676, 1.31749023675859, -0.816125234275669,
      0.939357455709719, -0.341266340874469, -0.0331894801235708,
      0.48233922987997, -0.766766634986172, 0.671338163610171,
      -1.08262501966774, -1.19946620391565, 1.29791737677625, -1.06717775694571,
      1.69725688052396, -0.0217288575520471, 0.544449801254452,
      1.76310152630717, 1.54845000689837, -0.469366861511199, -2.15234344821202,
      2.31344595205094, 0.542429882965011, 0.481865365885787, 1.14813374858918,
      0.567250411318214, -0.0106704697058941, 0.506317611638856,
      -0.436252099225911, -1.50764228064347, 1.09707511873831, 1.33073580538245,
      -0.424926250315224, -1.29904179146989, 2.10493569167943,
      0.826353031169728, -1.58602720685632, 0.0825249212470953,
      -0.665360662032109, -0.483784815242552, -1.03177153694833,
      1.62104052030781, -0.440846930103781, -1.65518971883847, 1.46510092319151,
      0.60581646455029, -0.840256991362053, -2.80333520505605,
      -0.675545782895745, 0.415538850654104, 0.0570027462435979,
      -0.259496016401498, 0.434446844805491, -1.23725018751362,
      2.37865400913385, 0.351149306835651, 0.869280868985328, 1.12450491114209,
      0.186036521910883, -1.0299244113961, 1.27058467821062, -2.15945401171363,
      -0.662049198443, -0.29926687826387, 1.48773127699589, 2.49033239728325,
      0.290873030432002, 0.493789170079176, -0.106313949112642,
      -0.401139007383008, 0.807185033680802, 0.95959956332433,
      -2.48195176574024, 0.521610204164376, 1.86441693705977, 0.50870058285062,
      1.10090333577335, -0.302587020311158, -0.320615806537165,
      0.691044274736706, 1.82414476809577, 0.0951939293189129,
      -0.536603498704663, -1.23598670336725, 1.10580533781152,
      -0.16750855461308, -0.113473590457408, 0.475430006291848,
      -0.886688768530324, 2.46586809754062, 0.271132774825349,
      0.953421594456443, -2.36405353576345, 0.68482435318347,
      -0.0121875880493223, 1.41649099708462, 0.550434900911507,
      -0.320392396559432, 1.28569174236642, -0.847049986775028,
      -0.460414363418081, -1.1617949923671, -0.777286593778772,
      0.892798086396931, 1.90633991016588, 1.95471035558827, -0.236977084716238,
      0.46141718065705, 0.207175246506649, -1.5622955753859, 1.88210747533448,
      -0.0381531827847733, 0.630030083315715, 0.901326068101437,
      1.38369214717797, 0.483654445460783, 1.03849340338656, -0.962366874243989,
      1.93195394190204, -0.529701537165328, 1.75855506582096, 1.32860485788533,
      -0.0373347546711421, 0.512613130642201, 0.323827211969626,
      0.913323127877251, 1.19168528527445, 0.184051560057684,
      -0.489957402250425, -0.800940952825897, 0.0808751633235408,
      0.88716015329148, -0.595800029223496, -0.171586398336362,
      0.118345335879769, 1.2770449943391, 1.46223081563771, 1.58343096957188,
      0.776593897207152, -2.00411046374169, 0.594899362517853,
      0.274681577255158, -0.471257434077962, 0.122420234474059,
      0.677019368858838, 1.82622686404355, -0.189747697675016,
      -1.48918502374322, -0.402714155425066, 1.20332929288671,
      -0.215060497807401, 0.567643599999574, 0.816020194601884,
      -0.0537849525106505, 0.802313613279164, -0.533846908738354,
      0.884513562069069, -0.978683228348959, 0.209756633418067,
      -0.435604831120983, -2.13292809868895, -1.55882915877373,
      0.781806120484083, -0.242445725455071, 2.1722307070144, 2.57910294380311,
      1.62686000999366, 0.764579895494398, 0.342431985424922,
      -0.348765298940495, 1.68339121643307, 0.413611538359572,
      -1.27655632400488, -0.203676413406571, -0.408441792245902,
      0.841807399831808, -2.44381556681993, 1.39156112658709,
      -0.670740093808337, -0.571615143449588, -0.0507840367040222,
      0.443829185772766, 0.549626143999177, 0.509698560959641,
      0.657843026606138, -1.18828839689536, -0.24084255770389,
      0.360273781831064, -0.857925937326108, -0.217843783634848,
      -1.04348607203289, -0.173858338519966, 0.00898907161018794,
      -0.197551379433561, 1.19190796441216, 2.42700169443012, 0.919574098123312,
      1.19908496821371, -0.958894918550507, 0.00205408002300547,
      1.26376547496767, -0.23387582362662, -2.21616307280506, 0.29580883157942,
      -0.363699927879275, 0.284670127826115, 1.46762664473163,
      0.697746800781487, 1.05371902664561, 0.151859104891517,
      0.00682749359623329, -1.08052594555925, 1.44518444565323,
      -0.00753115706460054, 0.640420204122651, 1.49560392273226,
      1.22673337441755, 1.97990388008222, -0.638831343035132,
      -0.542637087742618, -0.296510634113825, -0.545526350625818,
      -0.483056441754797, -0.343734871060401, 2.94360767988161,
      0.242335928798137, -0.242054588662589, 0.733302113127251,
      1.08695475671399, -0.910936892439307, -0.388490288620053,
      0.353583565322699, 0.882202420868273, -0.30357599705529,
      -0.115867713020107, 2.27148148256022, 1.58883441123674,
      -0.620330059319558, -0.101949619030153, -1.8956206077098,
      0.682641320976544, 1.41775594826672, -1.73210909949777,
      -0.825248371773916, 0.887759017997818, 0.367025618720097,
      -1.8819598677465, 0.582287607005448, -1.565628275146, -0.174243012529707,
      0.70493058581987, -0.360937130870223, 0.758031966512155,
      -0.0789986061244641, 0.674409036231428, 1.17151040359521,
      -0.27268395789196, 1.85955847932699, -0.0554656332582127,
      0.680738728858028, 0.321464042291368, -3.15340261074618,
      -1.46778730844021, -0.470604679227321, 1.79759508949568,
      -1.29282274852158, 1.11108670271281, -0.51766656321784,
      -0.788278510743547, -1.68982897329352, -1.32675451615694,
      -0.115315647135397, 0.378738279666496, -2.14138422266348,
      0.429806060752618, 1.37716110303777, -0.302819810452274, 2.24568263475833,
      1.20758601106554, 0.436298448314298, 0.120511198821218, 0.108608497476698,
      -0.811616575045726, 0.574778051431439, 2.88229833888187, 1.82208817146235,
      -0.661002894361026, -1.53157180001537, -0.145911319604916,
      0.282450077665773, 1.45741389271268, -1.4728459169234, 0.237737650106095,
      0.181421406222975, 2.6030006870674, 0.684499232141329, -0.208549628977592,
      -1.06150449863511, -0.553003108322036, -0.508839303061984,
      2.44997197655416, 2.25207568269402, -0.282735312613392, -1.0929031015824,
      -0.624385490468558, 1.12825118886407, -0.927083599418688, 2.3709920098329,
      -0.921351549837319, -0.0510963555044156, 3.89936861493994,
      -1.2754356938545, 0.175607961523926, -1.15022386174237, 1.92817772983995,
      0.296874737051136, 0.228055155194354, -0.211251876552043,
      -1.21801347800031, -0.142780473563928, 1.10124822028301, 1.40592789977844,
      -1.46854544588983, -0.300150046342377, 2.57841657409131,
      -0.422268571217983, -2.37781621630771, -0.853241457784229,
      -1.00176498355218, -0.100955690608104, -0.284833458969901,
      0.0660336880984902, -0.530685176016623, 0.318870068913376,
      0.926181298737209, 1.651369134923, -0.58377891974788, 0.375545201254722,
      -0.91998492721862, 0.0514987419432182, 0.0689525596761908,
      -1.83605845763816, -0.26232781217582, 1.12574956566244, 2.11478088105998,
      0.939597381648194, -1.03675554592877, 1.25300402110087,
      0.0424854960754904, -0.600453157617244, 1.74658078770239,
      -0.932160218149132, 0.176354485129137, 1.22703907485963, 2.04429743897819,
      0.494696067807857, -0.265093253174497, 0.440274674349925,
      0.476058857130949, -0.136283931933683, 1.42555699406597,
      -0.236324767162488, -0.808990145452859, 0.484887812296702,
      -0.777848370539061, 1.2158763423729, 0.658172556661827,
      -0.133064694202513, -1.1526258506103, -0.55219803802225, 1.65547735355631,
      -0.916119772932417, -2.41624292569042, 0.763694456439439,
      1.11459490509839, 0.787960308781442, -1.06737771568024,
      0.0591025344399154, 0.664042753119438, -0.728583746590817,
      -0.486131980713224, 0.920469021062525, -0.359801616724539,
      -0.21309243858636, 0.680375027470079, 1.39186635169015,
      -0.849047988644344, 0.928231609720267, 0.768187056204372,
      -0.609706112060453, 0.959647686363666, 0.813046720813862,
      0.448007498293625, 1.9622068927077, -0.720901131626094,
      -0.929074397110259, -1.23393835167381, 0.245841322159118,
      1.54623545964145, 1.51110562147414, 0.601485912960762, 0.709886494672577,
      -0.256559755114272, 0.410334565068892, 1.57473458604648,
      -0.662869109087838, -0.146068002298644, -0.0519817160217654,
      1.35536562944651, -1.17404485485496, -1.98209611751246, 0.593733314858779,
      -0.919582000668085, -0.488039315071744, 2.24376721989811,
      -0.276751532349524, -0.18400835004327, 1.58775036818712, 0.49080596565308,
      0.378235175739529, -0.01958599245279, -1.29844864606835,
      -1.59206054461157, -0.270792617814048, 3.52789741767833, 1.263436844276,
      0.327284345625146, 0.423894225842222, -0.421827236056127,
      -1.54335843872965, 2.77296984774811, -0.600454226811531,
      -0.420805435548274, -1.83182250121119, 1.38489833433015, 1.10756781851451,
      -0.111315092915812, -1.70285410732519, 1.74591114177835, 1.59300863997365,
      0.800373423598484, -1.25122581278837, 0.585404725700977,
      -0.299601258426976, 0.973311534517382, 1.83357332256063,
      -1.08233508502495, -0.430066556261621, -0.766096900324613,
      -0.127621735459342, -1.44496932255577, -0.857293389161872,
      0.58701331226678, 0.408592877482515, 0.283492379289786, 0.903036852610279,
      -2.27636634103076, -0.255657325236275, 0.675448176074138,
      -0.803147544208506, 0.0806174930289512, -1.74420563922774,
      0.71210874069581, -1.89626961158259, 1.06157399594953, 0.402386155604078,
      0.220378740571303, -0.732285277707248, 1.7899636467771, -1.57111695271474,
      0.36872438461105, -3.08480644775821, -0.122894883924879,
      0.461201443607518, 0.48287193343777, 1.93105613440314, 0.484970563808973,
      1.06191771694946, -0.878522462572055, -1.11354869912451,
      -1.64313677312062, -0.491801257134673, -1.43580451620764,
      0.637830304925711, 1.57623418792463, 3.28920853347629, -0.992971159424353,
      1.27047202048005, -0.563727019877892, -1.59932433445303,
      0.685897275032786, -1.59729527421228, -1.16271192512023,
      -0.777245006393334, 1.80827095529974, 0.215045968145435, 1.2232954074641,
      -1.11316199802544, 0.179863591985604, -0.010794784519502,
      -0.941178951633815, -0.591739423710262, -0.763701696499033,
      0.903855841943717, 2.93559853684942, -0.462602658563341, 1.08902059474117,
      0.0152762655069578, -2.0012150572451, -0.907054242609159,
      0.574433197945852, -0.0358079049817879, -2.52361898363155,
      0.532119279794941, 2.254701010096, 0.94060488764036, -0.548352012954269,
      2.05670299552344, -0.12646304819549, -0.171028892998702, -0.9998039671806,
      -1.50413982670526, -1.61800253566305, -0.467567027684119,
      2.91302394734243, 2.94723453875257, 1.72595885219719, 1.38565529404297,
      -0.274199702569317, -1.369388557667, -0.209401616468346,
      -2.56528861298251, -0.434112841471977, 1.60919419626146, 1.75401800788685,
      2.47797224205225, 0.637383845531567, -0.69330956530309, 1.70440947186789,
      -0.229949535824643, -0.851786715211304, -0.0987880056788862,
      -1.61059626114178, 0.809130370739691, 1.89405255887058, 0.306529634393207,
      -0.335008481321958, 1.02038490123121, -1.09724333051014,
      -1.12507436510987, 0.537199144711449, -0.616976341686777,
      0.787266116794213, -0.248028476386195, 2.64496285904445, 1.34728480459258,
      -2.09742403951238, -1.25320009571081, 1.24503697975747, 0.536137189192038,
      -0.844773644758746, -1.49124266840415, 0.900477208990653,
      -0.863466972080605, 3.07756754792064, 2.18067632939517, -1.31134737453519,
      -0.765474211359249, -1.28448981008064, 0.51334277009697,
      -1.16468031962072, -2.17167342697816, 1.86964914942172, 0.945969906056422,
      2.0297142272377, -0.528294433256265, 0.13031837197617, 0.698635366567805,
      -1.3154008029194, -0.269927315443494, 0.291463055868969, 1.51213050113387,
      0.514161145572669, 1.22208203421386, 1.38577949388567, -0.894969907849343,
      -0.19754773138353, -1.58213771267596, 0.891515929907153, 1.25230507545073,
      0.0536827708157103, -1.13069595094793, 0.952307569894461,
      0.0837243707266382, 0.863966329022897, 1.46393825572648,
      -0.605666354220166, 1.23268531447786, -0.877810541529725,
      0.23172132756424, 1.00167846447823, -1.49151783972955, 0.269206080369976,
      -0.162000746683493, 2.11206161675689, -0.0259219533641473,
      0.0642920313975898, 1.46507233373345, 0.131728006552689, 0.65892968138703,
      -0.102837978053917, -1.18791482429624, -0.131358865352399,
      -1.27184672448733, -1.18911795648054, 1.98621491651773,
      -0.940592372723748, -1.74205430134783, 0.957470605669522,
      -0.160361567056103, -0.477984945739609, -0.339372644898647,
      -0.535426433241227, 0.938029479070316, 2.00239737582892,
      -1.46240075750977, 0.502060645862483, 0.809977085828968,
      0.630760732742147, -2.54562461738252, -0.117023169973342,
      1.78866947383433, 0.662047828140661, -1.75535125444071,
      -0.278455672243674, 1.20234432696698, -0.0239367631181966,
      1.04403472659246, 0.256867553607498, -0.0729179517683806,
      0.299112075555256, -0.00455168679705592, -1.36648002914011,
      2.28988040335999, -0.0287976605496425, 0.661957062814105,
      -0.403538818308465, 1.87579773977282, 0.973825398206342,
      -0.702130682943231, 0.321065613825578, 0.992736868593171,
      2.08010628735946, 0.244092772330871, 0.15308575163891, -0.882459370632329,
      2.14410639300836, -1.98567574370401, 3.0148260942962, -0.406752655982078,
      -0.334398118049327, -0.00801537531804938, 0.799073168526317,
      0.247415701108991, -0.672625252752768, 0.776353130712932,
      0.611985140550054, 0.749971998353841, -1.06702076586645,
      -2.50265794144684, -0.20530362335999, -1.11478417498548,
      -0.879233176345936, -0.996303698101789, 1.2240752569151, 1.01249718014898,
      0.944888693901318, 1.06990223501136, -0.829835898769348,
      -0.458524164678054, 0.475368012325437, 1.2130664537499,
      -0.175827500384662, -1.74428944123854, 1.65222697149098,
      0.635467409690308, 1.91761119726471, 0.427497606558801,
      -0.658587289330163, -0.586938290539023, -0.384944163792527,
      0.0146307676289951, 0.0527965914270619, 0.861335603834235,
      1.72385064397625, 0.328324753588675, -0.79256733727735, 0.715699643084081,
      -0.0986263040522766, 0.0308485024743869, 1.21207029844484,
      1.56755827044655, -1.05395004827659, 1.58500669799276, 0.447667793469686,
      0.756016953805816, 0.373891822926807, -0.190684597524466,
      1.35537710202994, -0.805380522281356, 0.772915299800455,
      -0.184618332919013, -1.03639029944381, 1.15961649297601,
      -0.669862462312345, 0.239270643318379, -1.38606577042523,
      0.279100003421741, 0.227418582526803, -1.25814017960437,
      0.763082927671313, -1.19161134449968, 0.52597801642388, 0.18570168924734,
      2.13210502611633, -0.238079234985063, 0.250132911333618,
      -0.374714340489767, -1.50313756862187, -0.00505868740816873,
      1.8763072215619, -0.813972047434684, -0.318019850784429,
      0.638822038902558, 1.54073940914917, 3.03139421358819, 0.897677020495192,
      2.40876845458324, 0.31131813780345, -1.28090567049677, 0.534520609752711,
      -1.09463092880191, -1.1151755293416, -0.234081967465431, 2.56658088069084,
      1.70715996178485, 0.966018589314684, 1.00070186127327, -0.208401132084604,
      -2.52756816407708, 0.907216331931165, 1.97148809547862,
      -0.0658217273848589, -1.40043459569768, 1.09944897988561,
      -0.0764130898652789, 0.0951576723636569, 0.752320578214279,
      0.829363492548964, 0.0889516259083183, -0.810881172285029,
      0.647339567945083, 1.2107727738968, 2.18691977183703, 0.672156315623124,
      0.548814951531403, 1.33434487034617, -0.03484287520089, 0.487632075572401,
      0.0620277441926289, -0.0157264751292767, 0.00219244683097661,
      0.82874474219177, 0.352011351509342, 0.80930486651947, -1.97807106749011,
      -0.652856897560237, 0.0592150117754701, -2.54649445849421,
      2.03656397564565, -1.36134350462674, -1.30776929247158, 1.31615154363594,
      -2.2389090459583, 1.9659658474394, -0.152385472702995, 0.602274275509886,
      0.959943599797605, -0.99323844537079, -0.847593351812441,
      -2.85890197675248, -1.11707014879034, 0.254739263944208,
      0.451273091807035, 3.40437860863757, 0.679401443062712, 0.613569550800485,
      0.159896399846877, -0.522514889048341, 0.585784730008299,
      0.576871525604595, -0.0419728014492359, -0.920778465376809,
      -0.0904476642241298, 2.21521139466107, 1.49652792835141,
      -0.333783754073736, -0.58474313916949, 0.475533076117177,
      0.883659297466583, 0.237348359431015, -0.477046037210403,
      -0.983966078658822, -0.471162152607535, -0.142998279988775,
      -0.170498289396448;
  Eigen::MatrixXd r_answer(10, 100);
  for (Eigen::Index i = 0; i < 1000; ++i) {
    r_answer(i) = r_answer_vec(i);
  }
  Eigen::MatrixXd r_constrainted_draws_mat(20, 100);
  {
    auto rng = stan::services::util::create_rng<boost::ecuyer1988>(0123, 0);
    auto fn = [&model = ServicesPathfinderSingle::model](auto&& u) {
      return -model.log_prob_propto_jacobian(u, 0);
    };
    /*
    tbb::parallel_for(
        tbb::blocked_range<Eigen::Index>(0, draws_mat.cols()),
        [&](tbb::blocked_range<Eigen::Index> r) {
          */
    Eigen::VectorXd unconstrained_draws;
    Eigen::VectorXd constrained_draws1;
    Eigen::VectorXd constrained_draws2(20);
    Eigen::VectorXd lp_approx_vec(100);
    lp_approx_vec << -12.0415891980758, -14.6692843779338, -13.4109656242788,
        -12.227160804752, -10.8994669454787, -13.9464452858378,
        -17.7039786093493, -11.3031695577237, -12.1849838459723,
        -14.2633656680052, -13.7685697251323, -11.0849801402767,
        -10.8285877691116, -12.3078922043268, -18.4862079401751,
        -14.878979392217, -13.9884320991932, -15.7658450000531,
        -13.5906482194447, -12.9120430284407, -18.2651279783073,
        -13.0161106634425, -14.6633050842275, -15.708171891455,
        -13.8002820377402, -13.4484536964903, -12.9558192824891,
        -18.030159468489, -12.436042490926, -12.7938205793498,
        -15.4295215357008, -11.7361108739125, -14.1692223330973,
        -12.4698540687768, -16.2225112479695, -14.6021099557893,
        -15.4163482862364, -11.9367428966647, -15.6987363918049,
        -13.2541127046878, -13.395247477582, -13.7297660475934,
        -15.5881489265056, -13.5906575138153, -19.5817805593569,
        -15.3874299612537, -14.7803838914721, -13.5453155677371,
        -18.5256438441971, -21.7907055918946, -13.9876362902857,
        -14.3584339685507, -12.3086782261963, -13.4520009680182,
        -13.2565205387879, -14.8449352555917, -11.7995060730947,
        -16.1673766763038, -13.8230070576965, -14.4323461406136,
        -14.5139646362747, -15.7152727007162, -16.0978882701874,
        -12.8437110780737, -16.1267323384854, -17.5695117515445,
        -15.7244669033694, -14.318592510172, -13.6331931944301,
        -15.3973326320899, -16.6577158373945, -17.0600363400148,
        -13.3516348546988, -12.2942663317071, -19.1148011460955,
        -17.6392635944591, -13.3379766819778, -13.8803098238232,
        -12.5059777414601, -15.8823434809178, -14.5040005356544,
        -17.9707192175747, -14.3296312988667, -15.9246135209721,
        -20.6431707513941, -14.2483182078639, -12.9012691966467,
        -11.8312105455114, -14.2360469104402, -14.1732053430172,
        -12.7669225560584, -14.3443242235104, -14.4185150275073,
        -16.9557240942739, -14.2902638224899, -13.2814736915503,
        -20.7083049704887, -17.6192198763631, -10.705036567492,
        -12.1087056948567;
    //        for (int i = r.begin(); i < r.end(); ++i) {
    for (Eigen::Index i = 0; i < r_answer.cols(); ++i) {
      unconstrained_draws = r_answer.col(i);
      model.write_array(rng, unconstrained_draws, constrained_draws1);
      // constrainted_draws_mat.col(i) = constrained_draws1;
      constrained_draws2.head(18) = constrained_draws1;
      constrained_draws2(18) = lp_approx_vec(i);
      constrained_draws2(19) = -fn(unconstrained_draws);
      // lp_ratio(i) = -constrained_draws2(19) - constrained_draws2(18);
      r_constrainted_draws_mat.col(i) = constrained_draws2;
    }
  }
  Eigen::VectorXd mean_r_vals = r_constrainted_draws_mat.rowwise().mean();
  //        std::cout << "R Mean Values: \n" <<
  //        mean_r_vals.transpose().eval().format(CommaInitFmt) << "\n";
  Eigen::VectorXd sd_r_vals
      = (((r_constrainted_draws_mat.colwise() - mean_r_vals)
              .array()
              .square()
              .matrix()
              .rowwise()
              .sum()
              .array()
          / (r_constrainted_draws_mat.cols() - 1))
             .sqrt())
            .transpose()
            .eval();
  Eigen::VectorXd diff_vals(20);
  diff_vals = ((mean_r_vals.array() + (2.0 * sd_r_vals.array())).abs() - mean_vals.array().abs()).matrix();
  for (Eigen::Index i = 0; i < 18; i++) {
    EXPECT_GE(diff_vals(i), 0.0);
  }

  Eigen::MatrixXd ans_diff = param_vals - r_constrainted_draws_mat;
  Eigen::VectorXd mean_diff_vals = ans_diff.rowwise().mean();
  //      std::cout << "diff Mean Values: \n" <<
  //      mean_diff_vals.transpose().eval().format(CommaInitFmt) << "\n";
  Eigen::VectorXd sd_diff_vals = (((ans_diff.colwise() - mean_diff_vals)
                                       .array()
                                       .square()
                                       .matrix()
                                       .rowwise()
                                       .sum()
                                       .array()
                                   / (ans_diff.cols() - 1))
                                      .sqrt())
                                     .transpose()
                                     .eval();

  Eigen::MatrixXd all_mean_vals(3, 20);
  all_mean_vals.row(0) = mean_vals;
  all_mean_vals.row(1) = mean_r_vals;
  all_mean_vals.row(2) = mean_diff_vals;

  Eigen::MatrixXd all_sd_vals(3, 20);
  all_sd_vals.row(0) = sd_vals;
  all_sd_vals.row(1) = sd_r_vals;
  all_sd_vals.row(2) = sd_diff_vals;
/*
  std::cout << "\nMean vals:\n" << all_mean_vals.format(CommaInitFmt) << "\n";
  std::cout << "\nSD vals:\n" << all_sd_vals.format(CommaInitFmt) << "\n";
*/
}
